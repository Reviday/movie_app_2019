{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8TAgBeA,MAbf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,yBAAKG,UAAU,oBACX,8IAIA,8D,gFCgCGC,MAtCf,YAA4D,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC9C,OACI,yBAAKP,UAAU,SACX,kBAAC,IAAD,CAAMQ,GAAK,CACPC,SAAQ,iBAAaP,GACrBQ,MAAQ,CACJP,OACAC,QACAC,UACAC,SACAC,YAGJ,yBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKJ,UAAU,eACX,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,UACTO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOf,UAAU,kBAAkBc,OAGpD,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAG,KAAhD,WCoCLC,G,iNAzDbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAOVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKAE,IAAMC,IACd,6DANQ,gBAGEL,EAHF,EAERM,KACEA,KAAQN,OAKZ,EAAKO,SAAS,CAAEP,SAAQD,WAAW,IARzB,sC,mFAWVS,KAAKP,c,+BAEG,IAAD,EACuBO,KAAKlB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASpB,UAAU,aAChBmB,EAEG,yBAAKnB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAIF,yBAAKA,UAAU,UAEXoB,EAAOP,KAAI,SAAAgB,GACT,OACE,kBAAC,EAAD,CACEb,IAAKa,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GA7CjBwB,IAAMC,Y,MCiBVC,MAlBf,WACI,OACI,yBAAKjC,UAAU,OACX,kBAAC,IAAD,CAAMQ,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCWG0B,E,4LAhBU,IAAD,EACcN,KAAK/B,MAA3BsC,EADQ,EACRA,SAAUC,EADF,EACEA,aACIC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,+BAGX,IACEH,EAAaP,KAAK/B,MAAlBsC,SACR,OAAGA,EAASzB,MACD,8BAAOyB,EAASzB,MAAMN,OAEtB,S,GAZE2B,IAAMC,W,MCiBZO,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,kBAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW9C,IAChC,kBAAC,IAAD,CAAO4C,KAAK,aAAaE,UAAWR,MCV1CS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.4ba7f576.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                “Freedom is the freedom to say that two plus two make four. If that is\r\n                granted, all else follows.”\r\n          </span>\r\n            <span>− George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"; \r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link to= {{\r\n                pathname : `/movie/${id}`,\r\n                state : {\r\n                    year,\r\n                    title,\r\n                    summary,\r\n                    poster,\r\n                    genres\r\n                }\r\n            }}>\r\n                <img src={poster} alt={title} title={title}/>\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <ul className=\"genres\">\r\n                        {genres.map((genre, index) => (\r\n                            <li key={index} className=\"genres__genres\">{genre}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link> \r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string.isRequired)\r\n}\r\n\r\nexport default Movie;","import React from \"react\"; // react는 당신이 거기에 쓰는 모든 요소를 생성한다는 것.\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n    /* \r\n        현재 state는 내부에 존재하기 때문에, 페이지가 다시 home으로 가면 state를 다시 받아오게 된다.\r\n        근데, 이 값을 redux는 다른 곳에 state를 저장하기 때문에 페이지가 바뀌어도 값은 유지된다.\r\n        이 문제점은 redux를 배우고 난 후 내가 고쳐보도록 하자!\r\n     */\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies/json?sort_by=rating\"\r\n    );\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading\r\n          ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loader__text\">Loading...</span>\r\n            </div>\r\n          )\r\n          : (\r\n            <div className=\"movies\">\r\n              {\r\n                movies.map(movie => {\r\n                  return (\r\n                    <Movie\r\n                      key={movie.id}\r\n                      id={movie.id}\r\n                      year={movie.year}\r\n                      title={movie.title}\r\n                      summary={movie.summary}\r\n                      poster={movie.medium_cover_image}\r\n                      genres={movie.genres}\r\n                    />\r\n                  );\r\n                })\r\n              }\r\n            </div>\r\n            )\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n/*\r\nclass App extends React.Component { // react는 자동적으로 너의 class compnent의 render method를 실행해! 자동으로!\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('constructor');\r\n  }\r\n  state = { // 너가 바꿀 데이터를 넣어\r\n    count : 0\r\n  };\r\n  add = () => { // render function이 호출되도록 코딩해야함\r\n    this.setState(current => ({count: current.count + 1})) // setState를 호출하면 refresh를 함.\r\n                // 이것이 여러분이 state를 set할 때, \r\n                // react에서 외부의 상태에 의존하지 않는 가장 좋은 방법\r\n  };\r\n  minus = () => {\r\n    this.setState(current => ({count: current.count - 1}))\r\n  };\r\n  // 너가 setState를 호출할 때마다 react는 다시 render 할거야.\r\n\r\n  componentDidMount() {\r\n    console.log('component rendered');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"I'm just updated\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Goobye, cruel word\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"I'm rendering\");\r\n    return <div>\r\n      <h1>The number is: {this.state.count}</h1>\r\n      <button onClick={this.add}>Add</button>\r\n      <button onClick={this.minus}>Minus</button>\r\n    </div>\r\n  }\r\n  // component가 render 된 후, 호출되는 다른 function들이 존재한다.\r\n  // 그 중 알아둬야 할 것만 말하면\r\n  // * Mounting : 태어나는 것과 같다.\r\n  //        - constructor() : 자바스크립트의 생성자\r\n  //        - getDerivedStateFromProps() : (다루지 않음)\r\n  //        - render() \r\n  //        - componentDidMount() : render 후 실행\r\n  // * Updating : 일반적인 업데이트를 의미(업데이트의 원인은 너!) => setState를 호출할 때마다 발생!\r\n  //        - getDerivedStateFromProps() : (다루지 않음)\r\n  //        - shouldComponentUpdate() : (다루지 않음) - 기본적으로 업데이트를 할지 말지 결정하는 것에 대한 것\r\n  //        - render()\r\n  //        - getSnpshotBeforeUpdate() : (다루지 않음 - 니콜라스도 사용한 적 없음.)\r\n  //        - domponentDidUpdate() \r\n  // * Unmounting : component가 죽는 것을 의미(페이지를 바꿀 때)\r\n  //        - componentWillUnmount() : component가 떠날 때 호출된다.\r\n\r\n}\r\n*/\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link> \r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    <Link to={{\r\n        pathname : \"/about\",\r\n        state : {\r\n            fromNavigation: true\r\n        }\r\n    }}>About</Link> \r\n*/\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render() {\r\n        const { location } = this.props;\r\n        if(location.state) {\r\n            return <span>{location.state.title}</span>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from './routes/Detail';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('potato'));\n// <App /> => component : HTML을 반환하는 함수"],"sourceRoot":""}